{"ast":null,"code":"import React,{useState}from'react';import axios from'axios';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const text_input=_ref=>{let{onSubmit,className}=_ref;const[text,update_text]=useState('');const[result,return_results]=useState(null);const return_result=()=>{return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h2\",{className:\"Headers\",children:\"Word Count Results:\"}),/*#__PURE__*/_jsxs(\"p\",{className:\"Results\",children:[\"Word count: \",result['Word count']]}),/*#__PURE__*/_jsxs(\"p\",{className:\"Results\",children:[\"Average word length: \",result['Average word length']]}),/*#__PURE__*/_jsx(\"p\",{className:\"Results\",children:\"Number of words of length:\"}),/*#__PURE__*/_jsx(\"ul\",{className:\"Results_List\",children:Object.entries(result['Number of words of length']).map(_ref2=>{let[key,value]=_ref2;return/*#__PURE__*/_jsx(\"li\",{children:\"\".concat(key,\": \").concat(value)},key);})}),/*#__PURE__*/_jsxs(\"p\",{className:\"Results\",children:[\"The most frequently occurring word length is (\",result['The most frequently occurring word length is'],\")\",' ',\"for word lengths of: (\",result['The most frequently occurring word length is'],\")\"]})]});};const realtime_response=async newText=>{update_text(newText);try{const response=await axios.post('http://localhost:5000/count-words',{file:newText});return_results(response.data);onSubmit(response.data);// send result to parent\n}catch(error){console.error('Error counting words:',error);}};const drop_event=async event=>{event.preventDefault();const file=event.dataTransfer.files[0];if(file){const reader=new FileReader();reader.onload=e=>{const contents=e.target.result;update_text(contents);realtime_response(contents);};reader.readAsText(file);}};return/*#__PURE__*/_jsxs(\"div\",{onDrop:drop_event,onDragOver:e=>e.preventDefault(),children:[/*#__PURE__*/_jsx(\"textarea\",{value:text,onChange:e=>realtime_response(e.target.value),placeholder:\"Feed me words... with your keyboard... or throw your .txt file at me...\",className:className}),/*#__PURE__*/_jsx(\"br\",{}),result&&return_result()]});};export default text_input;","map":{"version":3,"names":["React","useState","axios","jsx","_jsx","jsxs","_jsxs","text_input","_ref","onSubmit","className","text","update_text","result","return_results","return_result","children","Object","entries","map","_ref2","key","value","concat","realtime_response","newText","response","post","file","data","error","console","drop_event","event","preventDefault","dataTransfer","files","reader","FileReader","onload","e","contents","target","readAsText","onDrop","onDragOver","onChange","placeholder"],"sources":["C:/Python_Tools/React_Words/react-wordcount/src/TextInput.js"],"sourcesContent":["import React, {useState} from 'react';\r\nimport axios from 'axios';\r\n\r\nconst text_input = ({onSubmit, className}) => {\r\n  const [text, update_text] = useState('');\r\n  const [result, return_results] = useState(null);\r\n\r\n  const return_result = () => {\r\n    return (\r\n      <div>\r\n        <h2 className='Headers'>Word Count Results:</h2>\r\n        <p className='Results'>Word count: {result['Word count']}</p>\r\n        <p className='Results'>Average word length: {result['Average word length']}</p>\r\n        <p className='Results'>Number of words of length:</p>\r\n        <ul className='Results_List'>\r\n          {Object.entries(result['Number of words of length']).map(([key, value]) => (\r\n            <li key={key}>{`${key}: ${value}`}</li>\r\n          ))}\r\n        </ul>\r\n        <p className='Results'>\r\n          The most frequently occurring word length is ({result['The most frequently occurring word length is']}){' '}\r\n          for word lengths of: ({result['The most frequently occurring word length is']})\r\n        </p>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const realtime_response = async (newText) => {\r\n    update_text(newText);\r\n    try {\r\n      const response = await axios.post('http://localhost:5000/count-words', { file: newText });\r\n      return_results(response.data);\r\n      onSubmit(response.data); // send result to parent\r\n    } catch (error) {\r\n      console.error('Error counting words:', error);\r\n    }\r\n  };\r\n\r\n  const drop_event = async (event) => {\r\n    event.preventDefault();\r\n\r\n    const file = event.dataTransfer.files[0];\r\n    if (file) {\r\n      const reader = new FileReader();\r\n      reader.onload = (e) => {\r\n        const contents = e.target.result;\r\n        update_text(contents);\r\n        realtime_response(contents);\r\n      };\r\n      reader.readAsText(file);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div onDrop={drop_event} onDragOver={(e) => e.preventDefault()}>\r\n      <textarea\r\n        value={text}\r\n        onChange={(e) => realtime_response(e.target.value)}\r\n        placeholder=\"Feed me words... with your keyboard... or throw your .txt file at me...\"\r\n        className={className}\r\n      />\r\n      <br />\r\n\r\n      {result && return_result()}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default text_input;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}