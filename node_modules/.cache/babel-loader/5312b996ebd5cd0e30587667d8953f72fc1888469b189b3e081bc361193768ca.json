{"ast":null,"code":"var _jsxFileName = \"C:\\\\Python_Tools\\\\React_Words\\\\react-wordcount\\\\src\\\\TextInput.js\",\n  _s = $RefreshSig$();\n// src/TextInput.js\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TextInput = ({\n  onSubmit\n}) => {\n  _s();\n  const [text, setText] = useState('');\n  const [result, setResult] = useState(null);\n  const handleCountWords = async () => {\n    try {\n      const response = await axios.post('http://localhost:5000/count-words', {\n        file: text\n      });\n      setResult(response.data);\n      onSubmit(response.data); // Pass the result to the parent component\n    } catch (error) {\n      console.error('Error counting words:', error);\n    }\n  };\n  const renderFormattedResult = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Word Count Results:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Word count: \", result['Word count']]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Average word length: \", result['Average word length']]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Number of words of length:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: Object.entries(result['Number of words of length']).map(([key, value]) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: `${key}: ${value}`\n        }, key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"The most frequently occurring word length is (\", result['The most frequently occurring word length is'], \")\", ' ', \"for word lengths of: (\", result['The most frequently occurring word length is'], \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n      value: text,\n      onChange: e => setText(e.target.value),\n      placeholder: \"Type or paste your text here...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleCountWords,\n      children: \"Count Words\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), result && renderFormattedResult()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(TextInput, \"Czd0IEWoNkA9qAubHi9FO9OdgtQ=\");\n_c = TextInput;\nexport default TextInput;\nvar _c;\n$RefreshReg$(_c, \"TextInput\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","TextInput","onSubmit","_s","text","setText","result","setResult","handleCountWords","response","post","file","data","error","console","renderFormattedResult","children","fileName","_jsxFileName","lineNumber","columnNumber","Object","entries","map","key","value","onChange","e","target","placeholder","onClick","_c","$RefreshReg$"],"sources":["C:/Python_Tools/React_Words/react-wordcount/src/TextInput.js"],"sourcesContent":["// src/TextInput.js\r\nimport React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst TextInput = ({ onSubmit }) => {\r\n  const [text, setText] = useState('');\r\n  const [result, setResult] = useState(null);\r\n\r\n  const handleCountWords = async () => {\r\n    try {\r\n      const response = await axios.post('http://localhost:5000/count-words', { file: text });\r\n      setResult(response.data);\r\n      onSubmit(response.data); // Pass the result to the parent component\r\n    } catch (error) {\r\n      console.error('Error counting words:', error);\r\n    }\r\n  };\r\n\r\n  const renderFormattedResult = () => {\r\n    return (\r\n      <div>\r\n        <h2>Word Count Results:</h2>\r\n        <p>Word count: {result['Word count']}</p>\r\n        <p>Average word length: {result['Average word length']}</p>\r\n        <p>Number of words of length:</p>\r\n        <ul>\r\n          {Object.entries(result['Number of words of length']).map(([key, value]) => (\r\n            <li key={key}>{`${key}: ${value}`}</li>\r\n          ))}\r\n        </ul>\r\n        <p>\r\n          The most frequently occurring word length is ({result['The most frequently occurring word length is']}){' '}\r\n          for word lengths of: ({result['The most frequently occurring word length is']})\r\n        </p>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <textarea\r\n        value={text}\r\n        onChange={(e) => setText(e.target.value)}\r\n        placeholder=\"Type or paste your text here...\"\r\n      />\r\n      <br />\r\n      <button onClick={handleCountWords}>Count Words</button>\r\n\r\n      {result && renderFormattedResult()}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TextInput;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}